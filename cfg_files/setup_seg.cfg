[FILE PATHS]
ct_fpath = /add/in/command/line
ct_data_tag = data
seg_path = /add/in/command/line
model_path = /path/to/model_repo/folder
model_name = M_a01_242_512
vote_maskname = add_in_command_line

[DEFAULTS]
stats_only = False
remove_masks = True
run_ensemble = True
run_seg = True
mem_thres = 5.0 # amount of data to be read from ct data at a time. Only applies to ensemble vote step.
overwrite_OK = True # if mask name already exists, overwrite.
rw_verbosity = 0 # 0 - silent, 1 - important stuff, 2 - everything
tiff_output = False # if True, final mask is output as tiff sequence
mpl_agg = Agg

[ADVANCED]
nprocs = 1 # for seg_chunk() - use these many processors on each subset of chunk
arr_split = 1 # for seg_chunk() - break down read chunk into these many subsets to process
arr_split_infer = 3 # break down the array of image patches to be passed into GPU into these many subsets

[PRE-PROCESSING]
preprocess = True

[SEG PARAMETERS]
mask_name = [mask01, mask02, mask03] # three passes will generate three individual masks
slice_axis = [1, 1, 2] # three passes along Z, Y and X (0, 1, and 2) axes respectively
n_patches = [(1x5), (1x5), (1x5)] # for each pass, the full slice will be extracted into 9 patches (3x3)
overlap = [20, 20, 20] # overlap of 20 pixels between neighboring patches
rotation = [0, 45, 0] # you can rotate the volume before extracting patches
crops = [(None:None), (100:-100), (100:-100)] # crop the volume to ignore voxels outside of the physical sample


[MORPHOLOGICAL FILTERS]
morpho_filt = False
#ops = [erode, dilate, erode, dilate]
#radius = [3, 3, 5, 5]
#invert_mask = False

